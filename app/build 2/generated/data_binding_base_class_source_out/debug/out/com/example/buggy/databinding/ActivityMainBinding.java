// Generated by view binder compiler. Do not edit!
package com.example.buggy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import com.example.buggy.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final Button button;

  @NonNull
  public final Button button2;

  @NonNull
  public final Button button4;

  @NonNull
  public final Button button5;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final TextView output;

  @NonNull
  public final EditText source;

  private ActivityMainBinding(@NonNull CoordinatorLayout rootView, @NonNull Button button,
      @NonNull Button button2, @NonNull Button button4, @NonNull Button button5,
      @NonNull ConstraintLayout constraintLayout, @NonNull TextView output,
      @NonNull EditText source) {
    this.rootView = rootView;
    this.button = button;
    this.button2 = button2;
    this.button4 = button4;
    this.button5 = button5;
    this.constraintLayout = constraintLayout;
    this.output = output;
    this.source = source;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button;
      Button button = rootView.findViewById(id);
      if (button == null) {
        break missingId;
      }

      id = R.id.button2;
      Button button2 = rootView.findViewById(id);
      if (button2 == null) {
        break missingId;
      }

      id = R.id.button4;
      Button button4 = rootView.findViewById(id);
      if (button4 == null) {
        break missingId;
      }

      id = R.id.button5;
      Button button5 = rootView.findViewById(id);
      if (button5 == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = rootView.findViewById(id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.output;
      TextView output = rootView.findViewById(id);
      if (output == null) {
        break missingId;
      }

      id = R.id.source;
      EditText source = rootView.findViewById(id);
      if (source == null) {
        break missingId;
      }

      return new ActivityMainBinding((CoordinatorLayout) rootView, button, button2, button4,
          button5, constraintLayout, output, source);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
